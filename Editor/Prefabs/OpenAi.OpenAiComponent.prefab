%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!1 &5236814685837551670
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 2606718476774641721}
  - component: {fileID: -836908125849792889}
  - component: {fileID: 6475590509803358721}
  - component: {fileID: 7313810465350879814}
  m_Layer: 0
  m_Name: OpenAi.OpenAiComponent
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!4 &2606718476774641721
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 5236814685837551670}
  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
  m_LocalPosition: {x: 0, y: 0, z: 0}
  m_LocalScale: {x: 1, y: 1, z: 1}
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 0
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!114 &-836908125849792889
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 5236814685837551670}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 2dac210a80c64f089652dec17dda8e47, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  fontColor: {r: 0.82, g: 0.82, b: 0.82, a: 1}
  richTextTagMap: 
  font: {fileID: 0}
  fontSize: 12
  iconBeingUsed: 1
  useTackIcon: 1
  readonlyMode: 0
  activeSettings:
    name: Paid
    id: 30c0eca9-01de-41b5-bf2e-1a8e9a1206f7
    skin: Custom
    fileName: Paid
    redistributable: 0
    lite: 0
    priority: 5
    type: json
  allSettings:
  - name: Default
    id: 06d9302a-b288-402f-8f1c-b00178d18860
    skin: Default
    fileName: Default
    redistributable: 0
    lite: 1
    priority: 7
    type: json
  - name: Paid
    id: 30c0eca9-01de-41b5-bf2e-1a8e9a1206f7
    skin: Custom
    fileName: Paid
    redistributable: 0
    lite: 0
    priority: 5
    type: json
  readmeData:
    richText: 
    textAreaObjectFields: []
    objectIdPairs: []
--- !u!114 &6475590509803358721
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 5236814685837551670}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 33945dc9c86843d6b1a4706d15ddf313, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  prompt: Create a script that prints hello world to the consle on game start
  advanced: 0
  scriptName: GameStartPrinter
  useOpenAiMonoBehaviour: 1
  prePrompt: 'Create unity component using the following user prompt: '
  postPrompt: Make sure to use UnityEngine PropertyAttributes to make the UI user
    friendly. Also this needs to be compatible with Unity version {unity_version}.
    Lastly, the class name should be {script_name}. Don't ever try to load anything
    from the resources folder unless the user prompt specifically calls for it. Add
    public fields for anything needed by the components. Make sure to include tooltip
    attributes for all public or serializable fields
  editPrePrompt: 'Edit the script with this prompt:'
  editPostPrompt: 'Current script:'
  script: {fileID: 11500000, guid: 504af0cdc8a5764468c9cec4e5ccbed4, type: 3}
  scriptInstance: {fileID: 7313810465350879814}
  canEdit: 1
  editPrompt: 
  addOnReload: 
--- !u!114 &7313810465350879814
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 5236814685837551670}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6e3926c2ff0fdcc4dbc45c722344df59, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  startPrompt: 
  editsArray:
    edits:
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    void Start()\n    {\n       
        Debug.Log(\"Hello World!\");\n    }\n}"
      editPrompt: Remove all comments
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\npublic class HelloWorld : OpenAiMonoBehaviour\n{\n    void
        Start()\n    {\n        Debug.Log(\"Hello World!\");\n    }\n}"
    - script: "// The start function will log \"Hello World!\" to the debug console\nusing
        OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    void Start()\n    {\n       
        Debug.Log(\"Hello World!\");\n    }\n}"
      editPrompt: Add a comment to the start function
      editedScript: "// The start function will log \"Hello World!\" to the debug
        console\nusing OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    void Start()\n    {\n       
        Debug.Log(\"Hello World!\");\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n//
        The start function will log \"Hello World!\" to the debug console \npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    void Start()\n    {\n       
        Debug.Log(\"Hello World!\");\n    } \n}"
      editPrompt: 'Move the comment about the start function to be directly above
        the function and not at the top of the file '
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n// The start function will log \"Hello World!\" to the debug
        console \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n    void Start()\n   
        {\n        Debug.Log(\"Hello World!\");\n    } \n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n///
        <summary>\n/// The Start function will log \"Hello World!\" to the debug
        console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.Log(\"Hello World!\");\n   
        } \n}"
      editPrompt: 'Remove all current comments and add a class function comment with
        javadoc styling '
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n/// <summary>\n/// The Start function will log \"Hello World!\"
        to the debug console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.Log(\"Hello World!\");\n   
        } \n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n///
        <summary>\n/// The Start function will log \"Hello World!\" to the debug
        console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.Log(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        _timePassed = Time.time -
        _previousTime;\n        Debug.Log(\"Time Passed: \" + _timePassed);\n       
        _previousTime = Time.time;\n    }\n}"
      editPrompt: 'add an update function that calculate the time passed between
        calls and print it to the console. '
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n/// <summary>\n/// The Start function will log \"Hello World!\"
        to the debug console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.Log(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        _timePassed = Time.time -
        _previousTime;\n        Debug.Log(\"Time Passed: \" + _timePassed);\n       
        _previousTime = Time.time;\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n///
        <summary>\n/// The Start function will log \"Hello World!\" to the debug
        console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        _timePassed = Time.time -
        _previousTime;\n        Debug.LogWarning(\"Time Passed: \" + _timePassed);\n       
        _previousTime = Time.time;\n    }\n}"
      editPrompt: 'Replace debug logs with debug log warnings. '
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n/// <summary>\n/// The Start function will log \"Hello World!\"
        to the debug console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        _timePassed = Time.time -
        _previousTime;\n        Debug.LogWarning(\"Time Passed: \" + _timePassed);\n       
        _previousTime = Time.time;\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n///
        <summary>\n/// The Start function will log \"Hello World!\" to the debug
        console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        // Comment added to the update
        function.\n        _timePassed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _timePassed);\n        _previousTime = Time.time;\n    }\n}"
      editPrompt: Add a comment to the update function
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n/// <summary>\n/// The Start function will log \"Hello World!\"
        to the debug console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    private void Update() \n    {\n        // Comment added to the update
        function.\n        _timePassed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _timePassed);\n        _previousTime = Time.time;\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\n///
        <summary>\n/// The Start function will log \"Hello World!\" to the debug
        console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    /// <summary>\n    /// Keeps track of the time passed since the
        previous frame \n    /// </summary>\n    private void Update() \n    {\n       
        _timePassed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _timePassed);\n        _previousTime = Time.time;\n    }\n}"
      editPrompt: Remove comment from inside update function. Add javadoc comment
        outside of Update() fucntion
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\n/// <summary>\n/// The Start function will log \"Hello World!\"
        to the debug console \n/// </summary> \npublic class HelloWorld : OpenAiMonoBehaviour\n{\n   
        private float _timePassed = 0;\n    private float _previousTime = 0;\n\n   
        /// <summary>\n    /// Logs \"Hello World!\" to the debug console\n    ///
        </summary>\n    void Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n   
        }\n\n    /// <summary>\n    /// Keeps track of the time passed since the
        previous frame \n    /// </summary>\n    private void Update() \n    {\n       
        _timePassed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _timePassed);\n        _previousTime = Time.time;\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    private float _timePassed
        = 0;\n    private float _previousTime = 0;\n\n    void Start()\n    {\n       
        Debug.LogWarning(\"Hello World!\");\n    }\n\n    private void Update() \n   
        {\n        _timePassed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _timePassed);\n        _previousTime = Time.time;\n    }\n}"
      editPrompt: remove all comments
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\npublic class HelloWorld : OpenAiMonoBehaviour\n{\n    private
        float _timePassed = 0;\n    private float _previousTime = 0;\n\n    void
        Start()\n    {\n        Debug.LogWarning(\"Hello World!\");\n    }\n\n   
        private void Update() \n    {\n        _timePassed = Time.time - _previousTime;\n       
        Debug.LogWarning(\"Time Passed: \" + _timePassed);\n        _previousTime
        = Time.time;\n    }\n}"
    - script: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing UnityEngine;\n\npublic
        class HelloWorld : OpenAiMonoBehaviour\n{\n    private float _ellapsed =
        0;\n    private float _previousTime = 0;\n\n    void Start()\n    {\n       
        Debug.LogWarning(\"Hello World!\");\n    }\n\n    private void Update() \n   
        {\n        _ellapsed = Time.time - _previousTime;\n        Debug.LogWarning(\"Time
        Passed: \" + _ellapsed);\n        _previousTime = Time.time;\n    }\n}"
      editPrompt: 'Update the time passed variable to be named ellapsed. '
      editedScript: "using OpenAiMonoBehaviour = OpenAi.OpenAiMonoBehaviour;\nusing
        UnityEngine;\n\npublic class HelloWorld : OpenAiMonoBehaviour\n{\n    private
        float _ellapsed = 0;\n    private float _previousTime = 0;\n\n    void Start()\n   
        {\n        Debug.LogWarning(\"Hello World!\");\n    }\n\n    private void
        Update() \n    {\n        _ellapsed = Time.time - _previousTime;\n       
        Debug.LogWarning(\"Time Passed: \" + _ellapsed);\n        _previousTime =
        Time.time;\n    }\n}"
